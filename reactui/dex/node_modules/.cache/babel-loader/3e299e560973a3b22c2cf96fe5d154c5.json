{"ast":null,"code":"/**\n * \n * Import web3 and dependencies\n * \n * \n * Connect to the development chain (Ganache chain @ 127.0.0.1:7545)\n * \n * \n * Read Dex contract abi and address\n */\nconst Web3 = require('web3');\n\nconst fs = require('fs');\n\nconst web3 = new Web3('http://127.0.0.1:7545');\nconst netId = web3.eth.net.getId();\nconsole.log(netId);\nconst dexJson = JSON.parse(fs.readFileSync('../build/contracts/Dex.json'));\nconst dexAbi = dexJson.abi;\nconst dexAddress = dexJson.networks[netId].address;\nconst dexContract = new web3.eth.Contract(dexAbi, dexAddress);\nconsole.log(dexContract);","map":{"version":3,"sources":["/Users/noname/truffle/iot_dex/reactui/dex/src/components/AppWeb3.js"],"names":["Web3","require","fs","web3","netId","eth","net","getId","console","log","dexJson","JSON","parse","readFileSync","dexAbi","abi","dexAddress","networks","address","dexContract","Contract"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAME,IAAI,GAAG,IAAIH,IAAJ,CAAS,uBAAT,CAAb;AACA,MAAMI,KAAK,GAAGD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAd;AAEAC,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWV,EAAE,CAACW,YAAH,CAAgB,6BAAhB,CAAX,CAAhB;AACA,MAAMC,MAAM,GAAGJ,OAAO,CAACK,GAAvB;AACA,MAAMC,UAAU,GAAGN,OAAO,CAACO,QAAR,CAAiBb,KAAjB,EAAwBc,OAA3C;AAEA,MAAMC,WAAW,GAAG,IAAIhB,IAAI,CAACE,GAAL,CAASe,QAAb,CAAsBN,MAAtB,EAA8BE,UAA9B,CAApB;AAEAR,OAAO,CAACC,GAAR,CAAYU,WAAZ","sourcesContent":["/**\n * \n * Import web3 and dependencies\n * \n * \n * Connect to the development chain (Ganache chain @ 127.0.0.1:7545)\n * \n * \n * Read Dex contract abi and address\n */\n\nconst Web3 = require('web3')\nconst fs = require('fs')\n\nconst web3 = new Web3('http://127.0.0.1:7545')\nconst netId = web3.eth.net.getId()\n\nconsole.log(netId)\n\nconst dexJson = JSON.parse(fs.readFileSync('../build/contracts/Dex.json'))\nconst dexAbi = dexJson.abi\nconst dexAddress = dexJson.networks[netId].address\n\nconst dexContract = new web3.eth.Contract(dexAbi, dexAddress)\n\nconsole.log(dexContract)\n\n\n\n"]},"metadata":{},"sourceType":"module"}