{"ast":null,"code":"var _jsxFileName = \"/Users/noname/truffle/iot_dex/reactui/dex/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport { HashRouter as Router } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios'; //import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COIN_TABLE_LENGTH = 8;\nconst Page = styled.div`\n  background-color: rgb(27, 53, 94);\n`;\n_c = Page;\nconst Block = styled.div`\n  margin: 12px 0;\n`;\nconst Controls = styled(Block)`\n  text-align: left;\n  margin-left: 8px;\n`;\nconst Button = styled.button`\n  margin: 0 0px;\n`;\nexport default function App(props) {\n  _s();\n\n  const [balance, setBalance] = useState(10000);\n  const [balanceHidden, setBalanceHidden] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  const getCoinData = async count => {\n    const coinsUrl = 'https://api.coinpaprika.com/v1/coins';\n    const coins = (await axios(coinsUrl)).data.slice(0, COIN_TABLE_LENGTH);\n\n    for (let coin of coins) {\n      coin.price = await getCoinPrice(coin.id);\n    }\n\n    const newCoinData = coins.slice(0, count).map(coin => {\n      return { ...coin,\n        balance: 0\n      };\n    });\n    setCoinData(newCoinData);\n  };\n\n  const getCoinPrice = async id => {\n    const url = `https://api.coinpaprika.com/v1/tickers/${id}`;\n    const tickerData = (await axios(url)).data;\n    return Number(parseFloat(tickerData.quotes.USD.price).toFixed(4));\n  };\n\n  const componentDidMount = async () => {\n    await getCoinData(COIN_TABLE_LENGTH);\n    const updatePeriod = 300 * 1000;\n    setInterval(async () => {\n      await getCoinData(COIN_TABLE_LENGTH);\n    }, updatePeriod);\n  };\n\n  useEffect(() => {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleRefresh = async id => {\n    const newPrice = await getCoinPrice(id);\n    let newCoinData = coinData.map(coin => {\n      if (coin.id === id) {\n        coin.price = newPrice;\n      }\n\n      return { ...coin\n      };\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleTransaction = (id, isBuy) => {\n    const changeBalanceAmount = isBuy ? 1 : -1;\n    let newCoinData = coinData.map(coin => {\n      if (coin.id === id) {\n        coin.balance += changeBalanceAmount;\n        setBalance(bal => bal - changeBalanceAmount * coin.price);\n      }\n\n      return { ...coin\n      };\n    });\n    setCoinData(newCoinData);\n  };\n\n  const handleBalanceVisibility = () => {\n    setBalanceHidden(!balanceHidden);\n  };\n\n  const handleBrrr = () => {\n    setBalance(bal => bal += 1200);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(AppHeader, {\n        title: \"Coin Exchange Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mSPvdUf4f/O63CbGPtFBYhlN2XA=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/noname/truffle/iot_dex/reactui/dex/src/App.js"],"names":["React","useState","useEffect","AppHeader","CoinList","AccountBalance","HashRouter","Router","styled","axios","COIN_TABLE_LENGTH","Page","div","Block","Controls","Button","button","App","props","balance","setBalance","balanceHidden","setBalanceHidden","coinData","setCoinData","getCoinData","count","coinsUrl","coins","data","slice","coin","price","getCoinPrice","id","newCoinData","map","url","tickerData","Number","parseFloat","quotes","USD","toFixed","componentDidMount","updatePeriod","setInterval","length","handleRefresh","newPrice","handleTransaction","isBuy","changeBalanceAmount","bal","handleBalanceVisibility","handleBrrr"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport AppHeader from './components/AppHeader'\nimport CoinList from './components/CoinList'\nimport AccountBalance from './components/AccountBalance'\n\nimport {HashRouter as Router} from 'react-router-dom'\n\nimport styled from 'styled-components'\nimport axios from 'axios'\n\n//import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootswatch/dist/darkly/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nconst COIN_TABLE_LENGTH = 8\n\nconst Page = styled.div`\n  background-color: rgb(27, 53, 94);\n`\n\nconst Block = styled.div`\n  margin: 12px 0;\n`\n\nconst Controls = styled(Block)`\n  text-align: left;\n  margin-left: 8px;\n`\n\nconst Button = styled.button`\n  margin: 0 0px;\n`\n\nexport default function App(props) {\n\n  const [balance, setBalance] = useState(10000)\n  const [balanceHidden, setBalanceHidden] = useState(false)\n  const [coinData, setCoinData] = useState([])\n\n  const getCoinData = async (count) => {\n    const coinsUrl = 'https://api.coinpaprika.com/v1/coins';\n    const coins = (await axios(coinsUrl)).data.slice(0, COIN_TABLE_LENGTH)\n    for (let coin of coins) {\n      coin.price = await getCoinPrice(coin.id)\n    }\n    const newCoinData = coins.slice(0,count).map((coin) => {\n      return {\n        ...coin,\n        balance: 0\n      }\n    })\n    setCoinData(newCoinData)\n  }\n\n  const getCoinPrice = async (id) => {\n    const url = `https://api.coinpaprika.com/v1/tickers/${id}`\n    const tickerData = (await axios(url)).data;\n    return Number(parseFloat(tickerData.quotes.USD.price).toFixed(4))\n  }\n\n  const componentDidMount = async () => {\n    await getCoinData(COIN_TABLE_LENGTH)\n    const updatePeriod = 300 * 1000;\n    setInterval(async() => {\n      await getCoinData(COIN_TABLE_LENGTH)\n    }, updatePeriod);\n  }\n\n  useEffect(() => {\n    if (coinData.length === 0) {\n      componentDidMount()\n    }\n  })\n\n  const handleRefresh = async (id) => {\n    const newPrice = await getCoinPrice(id)\n    let newCoinData = coinData.map((coin) => {\n      if (coin.id === id) {\n        coin.price = newPrice\n      }\n      return {...coin}\n    }) \n    setCoinData(newCoinData)\n }\n\n const handleTransaction = (id, isBuy) => {\n  const changeBalanceAmount = isBuy ? 1 : -1\n\n  let newCoinData = coinData.map((coin) => {\n    if (coin.id === id) {\n      coin.balance += changeBalanceAmount\n      setBalance(bal => bal - changeBalanceAmount * coin.price)\n    }\n    return {...coin}\n  }) \n  setCoinData(newCoinData)\n}\n\n const handleBalanceVisibility = () => {\n   setBalanceHidden(!balanceHidden)\n }\n\n const handleBrrr = () => {\n   setBalance(bal => bal += 1200)\n }\n\n  return (\n    <Router>\n    <Page>\n      <AppHeader title=\"Coin Exchange Project\" />\n{/* \n      <Controls>\n        <Button \n        onClick={async () => {await getCoinData(COIN_TABLE_LENGTH)}} \n        className='btn btn-primary'>\n          Refresh\n        </Button>\n        <AccountBalance \n          amount={balance} \n          balanceHidden={balanceHidden}\n          handleBalanceVisibility = {handleBalanceVisibility}\n          handleBrrr = {handleBrrr}\n        />\n      </Controls>\n      <CoinList \n        coinData={coinData} \n        handleRefresh={async (id) => {handleRefresh(id)}}\n        handleTransaction={handleTransaction}\n        balanceHidden={balanceHidden} \n      />\n       */}\n    </Page>\n    </Router>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}